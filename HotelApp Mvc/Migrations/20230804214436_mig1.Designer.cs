// <auto-generated />
using System;
using HotelApp_Mvc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelApp_Mvc.Migrations
{
    [DbContext(typeof(HotelApp_MvcContext))]
    [Migration("20230804214436_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HotelApp_Mvc.Models.Dbase.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"), 1L, 1);

                    b.Property<string>("PayCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PayStatus")
                        .HasColumnType("bit");

                    b.Property<int>("reserveId")
                        .HasColumnType("int");

                    b.HasKey("PaymentID");

                    b.HasIndex("reserveId")
                        .IsUnique();

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("HotelApp_Mvc.Models.Dbase.Reserve", b =>
                {
                    b.Property<int>("ReserveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReserveID"), 1L, 1);

                    b.Property<int>("ReserveCap")
                        .HasColumnType("int");

                    b.Property<long>("ReservePrice")
                        .HasColumnType("bigint");

                    b.Property<int>("RoomsID")
                        .HasColumnType("int");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.Property<DateTime>("checkInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("checkOutDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReserveID");

                    b.HasIndex("RoomsID");

                    b.HasIndex("UsersID");

                    b.ToTable("Reserve");
                });

            modelBuilder.Entity("HotelApp_Mvc.Models.Dbase.Rooms", b =>
                {
                    b.Property<int>("RoomsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomsID"), 1L, 1);

                    b.Property<bool>("RoomAvail")
                        .HasColumnType("bit");

                    b.Property<int>("RoomCapacity")
                        .HasColumnType("int");

                    b.Property<long>("RoomPrice")
                        .HasColumnType("bigint");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("reserveDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoomsID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HotelApp_Mvc.Models.Dbase.Users", b =>
                {
                    b.Property<int>("UsersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsersID"), 1L, 1);

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserNumber")
                        .HasColumnType("int");

                    b.HasKey("UsersID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HotelApp_Mvc.Models.Dbase.Payment", b =>
                {
                    b.HasOne("HotelApp_Mvc.Models.Dbase.Reserve", "reserve")
                        .WithOne("Payments")
                        .HasForeignKey("HotelApp_Mvc.Models.Dbase.Payment", "reserveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("reserve");
                });

            modelBuilder.Entity("HotelApp_Mvc.Models.Dbase.Reserve", b =>
                {
                    b.HasOne("HotelApp_Mvc.Models.Dbase.Rooms", "Rooms")
                        .WithMany("reserves")
                        .HasForeignKey("RoomsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelApp_Mvc.Models.Dbase.Users", "Users")
                        .WithMany("Reserves")
                        .HasForeignKey("UsersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rooms");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("HotelApp_Mvc.Models.Dbase.Reserve", b =>
                {
                    b.Navigation("Payments")
                        .IsRequired();
                });

            modelBuilder.Entity("HotelApp_Mvc.Models.Dbase.Rooms", b =>
                {
                    b.Navigation("reserves");
                });

            modelBuilder.Entity("HotelApp_Mvc.Models.Dbase.Users", b =>
                {
                    b.Navigation("Reserves");
                });
#pragma warning restore 612, 618
        }
    }
}
